import React from "react";
import { ActivityRecord } from "@/lib/db/schema";
import { Page, Text, View } from "@react-pdf/renderer";
import { styles } from "../styles";

function getActivityCategories(activity: ActivityRecord): string[] {
  const categories = [];
  if (activity.clinical) categories.push("Clinical");
  if (activity.nonClinical) categories.push("Non-Clinical");
  if (activity.interactive) categories.push("Interactive");
  if (activity.therapeutic) categories.push("Therapeutic");
  return categories.length > 0 ? categories : ["Uncategorized"];
}

function formatTags(tags: string[] | null): string[] {
  if (!tags || tags.length === 0) return [];
  return tags;
}

interface Props {
  activity: ActivityRecord;
  index: number;
  totalActivities: number;
}

function ActivityPage(props: Props) {
  const { activity, index, totalActivities } = props;

  const categories = getActivityCategories(activity);
  const tags = formatTags(activity.tags);

  return (
    <Page key={activity.id} size="A4" style={styles.page}>
      <Text style={styles.activityHeader}>
        Activity {index + 1}: {activity.name}
      </Text>

      {/* Basic Information */}
      <View style={styles.activitySection}>
        <Text style={styles.sectionTitle}>Basic Information</Text>
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>Date:</Text>
          <Text style={styles.detailValue}>
            {new Date(activity.date).toLocaleDateString()}
          </Text>
        </View>
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>Hours:</Text>
          <Text style={styles.detailValue}>
            {parseFloat(activity.hours)?.toFixed(1) ?? "0.0"} hours
          </Text>
        </View>
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>Provider:</Text>
          <Text style={styles.detailValue}>
            {activity.activityProvider || "Not specified"}
          </Text>
        </View>
        <View style={styles.detailRow}>
          <Text style={styles.detailLabel}>Status:</Text>
          <Text style={styles.detailValue}>
            {activity.isDraft ? "Draft" : "Published"}
          </Text>
        </View>
      </View>

      {/* Categories */}
      <View style={styles.activitySection}>
        <Text style={styles.sectionTitle}>Categories</Text>
        <View style={{ flexDirection: "row", flexWrap: "wrap" }}>
          {categories.map((category) => (
            <Text key={category} style={styles.categoryBadge}>
              {category}
            </Text>
          ))}
        </View>
      </View>

      {/* Description */}
      <View style={styles.activitySection}>
        <Text style={styles.sectionTitle}>Description</Text>
        <Text style={styles.sectionContent}>
          {activity.description || "No description provided."}
        </Text>
      </View>

      {/* Learning Reflection */}
      <View style={styles.activitySection}>
        <Text style={styles.sectionTitle}>Learning Reflection</Text>
        <Text style={styles.sectionContent}>
          {activity.reflection || "No reflection provided."}
        </Text>
      </View>

      {/* Tags */}
      {tags.length > 0 && (
        <View style={styles.activitySection}>
          <Text style={styles.sectionTitle}>Tags</Text>
          <View style={styles.tagContainer}>
            {tags.map((tag, tagIndex) => (
              <Text key={tagIndex} style={styles.tag}>
                {tag}
              </Text>
            ))}
          </View>
        </View>
      )}

      {/* Evidence File */}
      {activity.evidenceFileUrl && (
        <View style={styles.activitySection}>
          <Text style={styles.sectionTitle}>Evidence File</Text>
          <Text style={styles.sectionContent}>
            Evidence file attached: {activity.evidenceFileUrl.split("/").pop()}
          </Text>
        </View>
      )}

      <Text style={styles.footer}>
        Activity {index + 1} of {totalActivities} • Generated by EyeCPD •{" "}
        {new Date().toLocaleString()}
      </Text>
    </Page>
  );
}

export default ActivityPage;
